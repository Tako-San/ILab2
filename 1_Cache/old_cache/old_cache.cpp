#include "old_cache.h"


int main()
{
    using Cache = Cache_t<int, int>;
    Cache my_c = Cache(4);

    my_c.request(2);

    return 0;
}

/**
 * получаем данные
 * хэшируем
 *
 * смотрим, есть ли в мапе такой ключ
 * если есть:
 *   сравниваем данные в листе бакетов элов с входными
 *   если нашли совпадение:
 *     call_num++;
 *     возвращаем итератор на найденный элемент листа
 *     КОНЕЦ
 *
 * если нет:
 *   put_in_cache(data);
 *   КОНЕЦ
 *
 *
 *
 * func put_in_cache(data):
 *   смотрим хватает ли места в листе
 *
 *   если да:
 *     кладем в лист новый элемент (cache.push_back(data))
 *     создаем в мапе по нужному ключу новый бакет эл
 *     в этот бакет эл кладем итератор на данные и присваиваем call num 1
 *     возвращаем итератор на этот элемент листа
 *     КОНЕЦ
 *
 *   если нет:
 *     ищем элемент с наим числом вызовов
 *     переписыаем элемент на новый
 */
